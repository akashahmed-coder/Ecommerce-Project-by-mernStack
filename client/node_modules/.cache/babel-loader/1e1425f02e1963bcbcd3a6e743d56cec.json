{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nexport default function UserApi(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        const res = await axios.get(\"/user/info\", {\n          headers: {\n            Authorization: token\n          }\n        });\n        console.log(res);\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin]\n  };\n}\n\n_s(UserApi, \"N9O3g36WNtk/R5CY4pHOb8Ocvc4=\");\n\n_c = UserApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserApi\");","map":{"version":3,"sources":["C:/Users/Editor/Desktop/Ecommers/client/src/api/UserApi.js"],"names":["axios","React","useState","useEffect","UserApi","token","isLogged","setIsLogged","isAdmin","setIsAdmin","getUser","res","get","headers","Authorization","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAGA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACM,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,KAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACb,QAAGE,KAAH,EAAS;AACL,YAAMK,OAAO,GAAG,YAAU;AACrB,cAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,YAAV,EAAuB;AACrCC,UAAAA,OAAO,EAAC;AAACC,YAAAA,aAAa,EAACT;AAAf;AAD6B,SAAvB,CAAlB;AAGAU,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACJ,OALD;;AAMAD,MAAAA,OAAO;AACV;AACD,GAVQ,EAUP,CAACL,KAAD,CAVO,CAAT;AAYF,SAAM;AACFC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAUC,WAAV,CADR;AAEFC,IAAAA,OAAO,EAAC,CAACA,OAAD,EAASC,UAAT;AAFN,GAAN;AAID;;GApBuBL,O;;KAAAA,O","sourcesContent":["import axios from 'axios'\r\nimport React,{useState,useEffect} from 'react'\r\n\r\n\r\nexport default function UserApi(token) {\r\n    const [isLogged,setIsLogged] = useState(false)\r\n    const [isAdmin,setIsAdmin] = useState(false)\r\n  \r\n    useEffect(()=>{\r\n     if(token){\r\n         const getUser = async() =>{\r\n              const res = await axios.get(\"/user/info\",{\r\n                  headers:{Authorization:token}\r\n              })\r\n              console.log(res)\r\n         }\r\n         getUser()\r\n     }\r\n    },[token])\r\n    \r\n  return{\r\n      isLogged: [isLogged,setIsLogged],\r\n      isAdmin:[isAdmin,setIsAdmin]\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}