{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nexport default function UserApi(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [callback, setCallback] = useState(false);\n  useEffect(() => {\n    if (token) {\n      console.log(\"hi\");\n\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/info\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      const getHistory = async () => {\n        if (isAdmin) {\n          const res = await axios.get(\"/api/payment\", {\n            headers: {\n              Authorization: token\n            }\n          }); // setHistory(res.data.history)\n\n          console.log(res.data);\n        } else {\n          const res = await axios.get(\"/user/history\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setHistory(res.data.history);\n        }\n      };\n\n      getHistory();\n    }\n  }, [token, callback, isAdmin]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert('please login to buying product');\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]); //dont understand this part//\n\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      return alert('this product is added to cart');\n    } else {\n      alert('this product is already added to cart');\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory],\n    callback: [callback, setCallback]\n  };\n}\n\n_s(UserApi, \"pEf8Gdco6Y9kDSS7ua/WBEvo180=\");\n\n_c = UserApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserApi\");","map":{"version":3,"sources":["C:/Users/Editor/Desktop/Ecommers/client/src/api/UserApi.js"],"names":["axios","useState","useEffect","UserApi","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","callback","setCallback","console","log","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","getHistory","addCart","product","check","every","item","_id","quantity","patch"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport{useState,useEffect} from 'react'\r\n\r\n\r\nexport default function UserApi(token) {\r\n    const [isLogged,setIsLogged] = useState(false)\r\n    const [isAdmin,setIsAdmin] = useState(false)\r\n    const [cart,setCart] = useState([])\r\n    const [history, setHistory] = useState([])\r\n    const [callback,setCallback] = useState(false)\r\n  \r\n    useEffect(()=>{\r\n\r\n     if(token){\r\n         console.log(\"hi\")\r\n         const getUser = async() =>{\r\n             try {\r\n\r\n                const res = await axios.get(\"/user/info\",{\r\n                    headers:{Authorization:token}\r\n                })\r\n               setIsLogged(true)\r\n               res.data.role === 1 ? setIsAdmin(true): setIsAdmin(false)\r\n               setCart(res.data.cart)\r\n               \r\n             } catch (err) {\r\n                 alert(err.response.data.msg)\r\n             }\r\n         }\r\n         getUser()\r\n     }\r\n    },[token])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(token){\r\n          const getHistory = async () => {\r\n             \r\n                 if(isAdmin){\r\n                    const res = await axios.get(\"/api/payment\",{\r\n                        headers:{Authorization:token}\r\n                    })\r\n                    // setHistory(res.data.history)\r\n                    console.log(res.data)\r\n                 }else{\r\n                    const res = await axios.get(\"/user/history\",{\r\n                        headers:{Authorization:token}\r\n                    })\r\n                    setHistory(res.data.history)\r\n                 }\r\n              \r\n          }\r\n          getHistory()\r\n        }\r\n    },[token,callback,isAdmin])\r\n\r\n\r\nconst addCart = async(product) => {\r\n    if(!isLogged) return alert('please login to buying product')\r\n    const check = cart.every(item => {\r\n        return item._id !== product._id\r\n    })\r\n    if(check){\r\n      setCart([...cart,{...product,quantity:1}])      //dont understand this part//\r\n      \r\n      await axios.patch('/user/addcart',{cart:[...cart,{...product,quantity:1}]},{\r\n          headers:{Authorization:token}\r\n      })\r\n     return alert('this product is added to cart')\r\n    }else{\r\n        alert('this product is already added to cart')\r\n    }\r\n  \r\n}\r\n\r\n\r\n  return{\r\n      isLogged: [isLogged,setIsLogged],\r\n      isAdmin:[isAdmin,setIsAdmin],\r\n      cart:[cart,setCart],\r\n      addCart:addCart,\r\n      history:[history, setHistory],\r\n      callback:[callback,setCallback]\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}